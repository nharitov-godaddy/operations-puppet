# Notify the Data Engineering team about services on these hosts
contactgroups: 'admins,analytics'

nagios_group: analytics_eqiad
cluster: analytics
profile::admin::groups:
  - analytics-admins
# Oozie needs to have users deployed on the OS to be able to decide who can
# re-run bundles/coordinators for a specific user.
profile::admin::groups_no_ssh:
  - analytics-product-users

profile::hadoop::common::hadoop_cluster_name: 'analytics-hadoop'

profile::hive::client::hive_service_name: 'analytics-hive'
profile::hive::client::deploy_jdbc_settings: true

profile::oozie::client::oozie_service: 'analytics-oozie'

# Set the hive-site.xml file with group ownership 'analytics' so systemd timers
# can read the file.
profile::hive::client::config_files_group_ownership: 'analytics'

profile::analytics::cluster::hdfs_mount::monitoring_user: 'analytics'

# Hive Server Settings
profile::hive::server::monitoring_enabled: true
profile::hive::server::ferm_srange: '$ANALYTICS_NETWORKS'
profile::hive::metastore::monitoring_enabled: true
profile::hive::metastore::ferm_srange: '(($ANALYTICS_NETWORKS $DSE_KUBEPODS_NETWORKS))'

# Override to force the Hive Server 2 on an-coord1001 to use its local
# Metastore.
profile::hive::client::hive_metastore_host: 'an-coord1001.eqiad.wmnet'

# Kerberos settings
profile::kerberos::client::prefer_tcp: true

# Presto (Coordinator) Server settings
profile::presto::monitoring_enabled: true
profile::presto::cluster_name: analytics-presto
profile::presto::discovery_uri: https://an-coord1001.eqiad.wmnet:8281
profile::presto::server::heap_max: 10G
profile::presto::server::config_properties:
  coordinator: true
  node-scheduler.include-coordinator: false
  discovery-server.enabled: true
  # Set network-topology to legacy since we are not (yet?) running
  # presto co-located with HDFS nodes. If we were, we would
  # set this to 'flat'.
  node-scheduler.network-topology: legacy
  http-server.authentication.type: 'KERBEROS'
  http.server.authentication.krb5.service-name: 'presto'
  http.server.authentication.krb5.keytab: '/etc/security/keytabs/presto/presto.keytab'
  http.authentication.krb5.config: '/etc/krb5.conf'
  # query.max-memory is the max memory per node x number of nodes 40gb x nodes
  #query.max-memory for 5 nodes, note to upgrade once number of nodes increases
  query.max-memory: 200GB
  join-distribution-type: AUTOMATIC

profile::presto::server::catalogs:
  # Each catalog hash should contain a single properties has that will
  # end up being passed to the presto::catalog define.  This will render
  # a properties file at /etc/presto/catalog/$name.properties.
  analytics_hive:
    properties:
      connector.name: hive-hadoop2

      hive.metastore.uri: thrift://analytics-hive.eqiad.wmnet:9083
      hive.metastore.username: presto
      hive.metastore.authentication.type: 'KERBEROS'
      hive.metastore.client.keytab: '/etc/security/keytabs/presto/presto.keytab'
      hive.metastore.client.principal: 'presto/%{::fqdn}@WIKIMEDIA'
      hive.metastore.service.principal: 'hive/analytics-hive.eqiad.wmnet@WIKIMEDIA'

      # Allow presto to impersonate the user running the process to HDFS.
      hive.hdfs.impersonation.enabled: true
      hive.hdfs.authentication.type: 'KERBEROS'
      hive.hdfs.presto.principal: 'presto/%{::fqdn}@WIKIMEDIA'
      hive.hdfs.presto.keytab: '/etc/security/keytabs/presto/presto.keytab'
      hive.hdfs.wire-encryption.enabled: true

      # We do not (yet) colocate workers with Hadoop DataNodes.
      # When we tested 0.246 the option parser rejected setting the option to its
      # default, so we removed it but we left this comment for documentation purposes.
      #hive.force-local-scheduling: false
      # Add Hadoop config files so Hive connector can work with HA Hadoop NameNodes.
      hive.config.resources: /etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml
      hive.security: read-only
      # TODO: do we want to disable non managed tables?
      hive.non-managed-table-writes-enabled: true
      hive.non-managed-table-creates-enabled: true
      hive.storage-format: PARQUET
      hive.compression-codec: SNAPPY
      # Use the parquet column names instead of the ordinals to order of query results. T321960
      hive.parquet.use-column-names: true
      # The following hive.copy-on-first-write-configuration-enabled option is a workaround for a bug affecting kerberized
      # Hive and HDFS. We may remove it when https://github.com/prestodb/presto/issues/18474 is fixed. See also #T337335
      hive.copy-on-first-write-configuration-enabled: false

  analytics_iceberg:
    properties:
      connector.name: iceberg
      # Discover iceberg tables in via Hive metastore.
      iceberg.catalog.type: hive

      hive.metastore.uri: thrift://analytics-hive.eqiad.wmnet:9083
      hive.metastore.username: presto
      hive.metastore.authentication.type: KERBEROS
      hive.metastore.client.keytab: /etc/security/keytabs/presto/presto.keytab
      hive.metastore.client.principal: 'presto/%{::fqdn}@WIKIMEDIA'
      hive.metastore.service.principal: 'hive/analytics-hive.eqiad.wmnet@WIKIMEDIA'

      # Allow presto to impersonate the user running the process to HDFS.
      hive.hdfs.impersonation.enabled: true
      hive.hdfs.authentication.type: 'KERBEROS'
      hive.hdfs.presto.keytab: '/etc/security/keytabs/presto/presto.keytab'
      hive.hdfs.presto.principal: 'presto/%{::fqdn}@WIKIMEDIA'
      hive.hdfs.wire-encryption.enabled: true

      # Add Hadoop config files so Iceberg hive connector can work with HA Hadoop NameNodes.
      hive.config.resources: /etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml
      iceberg.file-format: PARQUET
      iceberg.compression-codec: SNAPPY
      # The following hive.copy-on-first-write-configuration-enabled option is a workaround for a bug affecting kerberized
      # Hive and HDFS. We may remove it when https://github.com/prestodb/presto/issues/18474 is fixed. See also #T337335
      hive.copy-on-first-write-configuration-enabled: false


profile::presto::server::ferm_srange: $ANALYTICS_NETWORKS

profile::analytics::database::meta::datadir: '/srv/sqldata'
profile::analytics::database::meta::monitoring_enabled: true
profile::analytics::database::meta::ferm_srange: '(($DRUID_PUBLIC_HOSTS $ANALYTICS_NETWORKS $WIKIKUBE_KUBEPODS_NETWORKS (@resolve((db1208.eqiad.wmnet)) @resolve((db1208.eqiad.wmnet), AAAA))))'
profile::analytics::database::meta::innodb_pool_size: '8G'

profile::oozie::server::monitoring_enabled: true
profile::oozie::server::ferm_srange: '$ANALYTICS_NETWORKS'

profile::oozie::server::use_admins_list: true
profile::oozie::server::admin_users: []
profile::oozie::server::admin_groups: ['analytics-admins', 'ops']
profile::oozie::server::jvm_opts: '-Xms2g -Xmx2g'

# Build and install oozie sharelib for our custom spark2 package.
profile::hadoop::spark2::install_oozie_sharelib: true

# Upload the spark2-assembly.zip file to HDFS
profile::hadoop::spark2::install_assembly: true

profile::debdeploy::client::exclude_mounts:
  - /mnt/hdfs

profile::oozie::server::oozie_service_kerberos_enabled: true
profile::oozie::server::local_realm: 'ANALYTICS.EQIAD.WMFLABS'
profile::oozie::server::oozie_service_keytab_file: '/etc/security/keytabs/oozie/HTTP-oozie.keytab'
profile::oozie::server::oozie_service_kerberos_principal: 'oozie/_HOST@WIKIMEDIA'
profile::oozie::server::oozie_authentication_type: 'kerberos'
profile::oozie::server::oozie_authentication_kerberos_principal: 'HTTP/_HOST@WIKIMEDIA'
profile::oozie::server::spark_defaults_config_dir: '/etc/spark2/conf'
profile::oozie::server::oozie_sharelib_archive: '/usr/lib/oozie/oozie-sharelib.tar.gz'

profile::kerberos::keytabs::keytabs_metadata:
  - role: 'hive'
    owner: 'hive'
    group: 'hive'
    filename: 'hive.keytab'
  - role: 'oozie'
    owner: 'oozie'
    group: 'oozie'
    filename: 'HTTP-oozie.keytab'
  - role: 'analytics'
    owner: 'analytics'
    group: 'analytics'
    filename: 'analytics.keytab'
  - role: 'hadoop'
    owner: 'hdfs'
    group: 'hdfs'
    filename: 'hdfs.keytab'
    parent_dir_grp: 'hadoop'
  - role: 'presto'
    owner: 'presto'
    group: 'presto'
    filename: 'presto.keytab'

profile::java::java_packages:
  - version: '8'
    variant: 'jdk'
profile::java::extra_args:
  JAVA_TOOL_OPTIONS: "-Dfile.encoding=UTF-8"
profile::contacts::role_contacts: ['Data Engineering']

profile::base::certificates::include_bundle_jks: true

# Context for the flag in https://phabricator.wikimedia.org/T276906
# The Hive daemons, now running a more up-to-date version of log4j,
# should not load the extra log4jv1 jars to avoid classpath loading issues
# (see https://issues.apache.org/jira/browse/BIGTOP-3619).
profile::hadoop::common::config_override:
  enable_log4j_extras: false
