cluster: ores
profile::admin::groups:
  - ores-admin
profile::ores::celery::workers: 90

# We think the queue size should be (total number of celery workers / 2)
profile::ores::celery::queue_maxsize: 405

profile::ores::web::workers: 50

profile::ores::web::redis_queue_port: 6380
profile::ores::web::redis_cache_port: 6378
# The password is in the private store, this is here for completeness
# profile::ores::web::redis_password: nothing

profile::prometheus::statsd_exporter::mappings:
  # timings
  - match: "^ores\\.([a-z]*)([0-9]*)\\.(datasources_extracted|precache_request|score_processed|score_timed_out|scores_request|precache_score|precache_scoring_error)\\.([a-z]*)$"
    name: ores_request_duration_seconds
    match_type: regex
    labels:
      type: "$3"
      wiki: "$4"

  - match: "^ores\\.([a-z]*)([0-9]*)\\.(datasources_extracted|precache_request|score_processed|score_timed_out|scores_request|precache_score|precache_scoring_error)\\.([a-z]*)\\.([a-z]*)$"
    name: ores_model_request_duration_seconds
    match_type: regex
    labels:
      type: "$3"
      wiki: "$4"
      model: "$5"

  - match: "^ores\\.([a-z]*)([0-9]*)\\.(locking_response_time|lock_acquired)\\.([a-z])*$"
    name: ores_locking_response_time_seconds
    match_type: regex
    labels:
      source: "$3"

  # counters
  - match: "^ores\\.([a-z]*)([0-9]*)\\.(precache_cache_hit|precache_cache_miss|revision_scored|score_cache_hit|score_cache_miss|score_errored|score_processor_overloaded)\\.([a-z]*)$"
    name: "ores_${3}_total"
    match_type: regex
    labels:
      wiki: "$4"

  - match: "^ores\\.([a-z]*)([0-9]*)\\.(precache_cache_hit|precache_cache_miss|revision_scored|score_cache_hit|score_cache_miss|score_errored|score_processor_overloaded)\\.([a-z]*)\\.([a-z]*)$"
    name: "ores_model_${3}_total"
    match_type: regex
    labels:
      wiki: "$4"
      model: "$5"

  - match: "^ores\\.([a-z]*)([0-9]*)\\.(response|response_made).([0-9]*)\\.([a-z]*)$"
    name: ores_response_total
    match_type: regex
    labels:
      status: "$3"
      code: "$4"

  - match: ores.*.uwsgi.core.overloaded
    name: ores_uwsgi_core_overloaded_total

  - match: ores.*.uwsgi.core.routed_signals
    name: ores_uwsgi_core_routed_signals_total

  - match: ores.*.uwsgi.core.total_tx
    name: ores_uwsgi_core_tx_total

  - match: ores.*.uwsgi.core.unrouted_signals
    name: ores_uwsgi_unrouted_signals_total

  - match: ores.*.uwsgi.core.busy_workers
    name: ores_uwsgi_busy_workers_count

  - match: ores.*.uwsgi.rss_size
    name: ores_uwsgi_rss_size_bytes

  - match: ores.*.uwsgi.vsz_size
    name: ores_uwsgi_vsz_size_bytes

  - match: ores.*.uwsgi.socket.*.listen_queue
    name: ores_uwsgi_socket_listen_queue_total
    labels:
      socketid: "$2"

  - match: ores.*.uwsgi.worker.*.delta_requests
    name: ores_uwsgi_worker_delta_requests_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.failed_requests
    name: ores_uwsgi_worker_failed_requests_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.requests
    name: ores_uwsgi_worker_requests_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.respawns
    name: ores_uwsgi_worker_respawns_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.total_tx
    name: ores_uwsgi_worker_tx_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.core.*.exceptions
    name: ores_uwsgi_worker_core_exceptions_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.core.*.offloaded_requests
    name: ores_uwsgi_worker_core_offloaded_requests_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.core.*.read_errors
    name: ores_uwsgi_worker_core_read_errors_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.core.*.requests
    name: ores_uwsgi_worker_core_requests_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.core.*.routed_requests
    name: ores_uwsgi_worker_core_routed_requests_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.core.*.static_requests
    name: ores_uwsgi_worker_core_static_requests_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.core.*.write_errors
    name: ores_uwsgi_worker_core_write_errors_total
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.avg_response_time
    name: ores_uwsgi_worker_avg_response_time_seconds
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.rss_size
    name: ores_uwsgi_worker_rss_size_bytes
    labels:
      workerid: "$2"

  - match: ores.*.uwsgi.worker.*.vsz_size
    name: ores_uwsgi_worker_vsz_size_bytes
    labels:
      workerid: "$2"

  # some metrics are totals of more specific metrics.  drop these duplicates as
  # they can be calculated by not applying filters
  - match: "."
    name: drop_undefined
    action: 'drop'
    match_type: 'regex'

profile::ores::logstash_host: localhost
service::configuration::logstash_host: 127.0.0.1

# envoy for TLS between ATS and backend servers
profile::tlsproxy::envoy::ensure: present
profile::tlsproxy::envoy::services:
  - server_names: ['*']
    port: 8081
profile::tlsproxy::envoy::global_cert_name: "ores.discovery.wmnet"
profile::tlsproxy::envoy::sni_support: "no"
profile::services_proxy::envoy::listen_ipv6: false
profile::services_proxy::envoy::enabled_listeners:
 - mwapi-async
profile::contacts::role_contacts: ['Machine Learning']
