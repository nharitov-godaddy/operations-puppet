# Defines common statsd_exporter mappings for Airflow instances.
# Those mappings rewrites the metrics to be more Prometheus friendly.
profile::airflow::statsd_exporter_default_mappings:

  - match: airflow.scheduler.scheduler_loop_duration
    name: airflow_scheduler_loop_duration
    summary_options:
      quantiles:
        - quantile: 0.5
          error: 0.1
      max_age: 30s
      age_buckets: 30
      buf_cap: 10

  # Example:
  #   airflow.operator_failures__HdfsEmailOperator count
  #   => airflow_operator{operator="HdfsEmailOperator", state="failures"} count
  - match: airflow\.operator_(failures|successes)[\._]+(\w+)
    match_type: regex
    name: airflow_operator
    ttl: 1m
    labels:
      state: "$1"
      operator: "$2"

  # Example:
  #   airflow.ti_failures count
  #   => airflow_ti{state="failures"} count
  - match: airflow\.ti_(failures|successes)
    match_type: regex
    name: airflow_ti
    labels:
      state: "$1"

  # Example:
  #   airflow.ti.start.example_python_operator.print_array count
  #   dropped
  - match: airflow\.ti\.start.*
    match_type: regex
    name: airflow_ti_start
    action: drop


  # Renamed to remove ambiguity with the next mapping
  # The ambiguity only happens in prod, and depends on the order of the metric arrivals to the exporter.
  - match: airflow\.ti\.finish$
    match_type: regex
    name: airflow_ti_finish_aggregated

  # Example:
  #   airflow.ti.finish.example_dag.task_1.failed count
  #   => airflow_ti_finish{dag_id="example_dag", task_id="task1", state="failed"} count
  - match: airflow\.ti\.finish.(\w+)\.(\w+)\.(queued|running|scheduled|success|failed)
    match_type: regex
    name: airflow_ti_finish
    ttl: 1m
    labels:
      dag_id: "$1"
      task_id: "$2"
      state: "$3"

  # Example:
  #   airflow.ti.finished.example_python_operator.print_array.None count
  #   dropped
  - match: airflow\.ti\.finish\.(\w+)\.(\w+)\.(None|deferred|removed|restarting|shutdown|skipped|up_for_reschedule|up_for_retry|upstream_failed)
    match_type: regex
    name: airflow_ti_finish_useless
    action: drop

  # Example:
  #   airflow.dag.pageview_hourly.move_data_to_archive.duration
  #   => airflow_dag_duration{dag_id="pageview_hourly", task_id="move_data_to_archive"} count
  - match: airflow\.dag\.(\w+)\.(\w+)\.duration
    match_type: regex
    name: "airflow_task_duration"
    ttl: 1m
    labels:
      dag_id: "$1"
      task_id: "$2"

  # Example:
  #   airflow.dag.pageview_hourly.move_data_to_archive.duration
  #   dropped
  - match: airflow\.dag\.(\w+)\.(\w+)\.(queued_duration|scheduled_duration)
    match_type: regex
    name: airflow_dag_other_durations
    action: drop

  # Example:
  #   airflow.dagrun.duration.pageview_hourly count
  #   dropped
  - match: airflow\.dagrun\.duration\.(success|failed)$
    match_type: regex
    name: airflow_dagrun_duration_success
    action: drop

  # Example:
  #   airflow.dagrun.duration.success.pageview_hourly count
  #   => airflow_dagrun_duration{dag_id="pageview_hourly", state="success"} count
  - match: airflow\.dagrun\.duration\.(success|failed)\.(\w+)
    match_type: regex
    name: airflow_dagrun_duration
    ttl: 1m
    labels:
      state: "$1"
      dag_id: "$2"
