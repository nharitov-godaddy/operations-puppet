<%#- SPDX-License-Identifier: Apache-2.0 -%>
# Apache configuration for performance.wikimedia.org
# This file is managed by Puppet.
<VirtualHost *:80>
    ServerName <%= @server_name %>

    DocumentRoot /srv/org/wikimedia/performance/public_html
    Alias /excimer /srv/org/wikimedia/performance/excimer/index.php
    Alias /xhgui /srv/org/wikimedia/performance/xhgui/webroot

    <Directory />
        AllowOverride None
    </Directory>

    <Directory /srv/org/wikimedia/performance/public_html>
        <IfModule mod_headers.c>
            Header set Cache-Control "s-maxage=600, max-age=600, public, must-revalidate"
        </IfModule>
        Require all granted
    </Directory>

    # Excimer UI displays flamegraphs.
    # The data is collected by php-excimer, saved over HTTP from MediaWiki hosts via WikimediaDebug.
    #
    # https://wikitech.wikimedia.org/wiki/WikimediaDebug#Request_profiling
    <Directory /srv/org/wikimedia/performance/excimer>
        AllowOverride None
        php_admin_flag engine on
        Require all granted
    </Directory>

    # XHGui displays memory usage and call counts.
    # The data is collected by php-tideways, saved to MySQL from MediaWiki hosts via WikimediaDebug.
    #
    # https://wikitech.wikimedia.org/wiki/XHGui
    <Directory /srv/org/wikimedia/performance/xhgui>
        AllowOverride None
        php_admin_flag engine on
        Require all granted

        # Based on:
        # https://gerrit.wikimedia.org/g/operations/software/xhgui/+/refs/tags/0.12.0/webroot/.htaccess
        RewriteEngine On
        RewriteBase /xhgui
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^ index.php [QSA,L]
    </Directory>

    <Location /excimer>
        <Limit GET HEAD>
            Require all granted
        </Limit>
        # Only MediaWiki servers may post data to the /excimer/ingest endpoint
        <LimitExcept GET HEAD>
          <RequireAny>
          <%- scope.lookupvar('network::constants::domain_networks').each do |net| -%>
            Require ip <%= net %>
          <%- end -%>
          </RequireAny>
        </LimitExcept>
    </Location>

    <Location /xhgui>
        <Limit GET HEAD>
            Require all granted
        </Limit>
        # We deploy the XHGui frontend in read-only configuration.
        #
        # This is enforced through read-only MySQL credentials,
        # and also at the HTTP level here by disabling all non-GET
        # endpoints, such as
        #
        # - POST /xhgui/delete_all: **Truncates the entire database**.
        # - POST /xhgui/delete: Delete single record.
        # - POST /xhgui/import: Import an offline profile.
        # - POST /xhgui/watch: shared bookmark list for certain function names.
        <LimitExcept GET HEAD>
            Require all denied
        </LimitExcept>
    </Location>

    # Swift should already reject unauthenticated write requests to
    # the arclamp buckets.  Also filtering those requests here adds
    # another layer of protection against misconfiguration.
    <Location /arclamp>
        Require all granted
        <LimitExcept GET HEAD>
            Require all denied
        </LimitExcept>
    </Location>

    # Swift proxy backend uses SSL, with a certificate issued by Puppet.
    SSLProxyEngine On
    SSLProxyCACertificateFile /etc/ssl/certs/wmf-ca-certificates.crt

<% if @swift_auth_url -%>
    # These are evaluated in the order in which they appear; the first directive
    # to match a given URI is used.
    ProxyPassMatch "^/arclamp/svgs/(hourly|daily)/(\d{4}-\d\d-\d\d(_\d\d)?\.[a-zA-Z0-9\._-]+(\.reversed)?)\.svgz$" "<%= @swift_auth_url %>/v1/<%= @swift_account_name %>/arclamp-svgs-$1/$2.svgz"
    ProxyPassMatch "^/arclamp/logs/(hourly|daily)/(\d{4}-\d\d-\d\d(_\d\d)?\.[a-zA-Z0-9\._-]+)\.log\.gz$" "<%= @swift_auth_url %>/v1/<%= @swift_account_name %>/arclamp-logs-$1/$2.log.gz"
<% end -%>
<% if @arclamp_host -%>
    ProxyPass /arclamp http://<%= @arclamp_host %>/arclamp
    ProxyPassReverse /arclamp http://<%= @arclamp_host %>/arclamp
    Redirect 301 /xenon /arclamp
<% end -%>

<% if @server_name != "performance.wikimedia.org" -%>
    # This is not the canonical site, so we don't want content indexed here.
    Alias /robots.txt /var/www/no-robots.txt
<% end -%>
</VirtualHost>

# Let Varnish override the remote IP, so that IP-restriction for POST works as expected.
RemoteIPHeader X-Client-IP
