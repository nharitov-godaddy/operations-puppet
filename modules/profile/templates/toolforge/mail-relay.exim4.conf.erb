#
# THIS FILE IS MAINTAINED BY PUPPET
# source: modules/toolforge/templates/mail-relay.exim4.conf.erb
# from:   toolforge::mailrelay
#

##########
# Macros #
##########

INSTANCEPROJECT = <%= @wmcs_project %>
PRIMARY_DOMAIN  = <%= @primary_domain %>
SRS_SECRET      = <%= @srs_secret %>
SRS_OFFSET      = 14159
SRS_DSN_TIMEOUT = 10

###############################
# Main configuration settings #
###############################

primary_hostname = <%= @external_hostname %>
qualify_domain = PRIMARY_DOMAIN
smtp_banner = $smtp_active_hostname ESMTP

domainlist local_domains = <%= @mail_domains.join(' : ') %> : \
                           *.INSTANCEPROJECT.eqiad.wmflabs : \
                           *.INSTANCEPROJECT.eqiad1.wikimedia.cloud
# The <; at the beginning tells exim to use ';' as the delimiter instead of the default ':' (which interferes with ipv6)
hostlist toolforge_hosts = <; <%= @all_toolforge_servers.join(' ; ') %>
hostlist wmcs_hosts = 172.16.0.0/21

acl_smtp_rcpt = acl_check_rcpt
acl_smtp_data = acl_check_data
acl_smtp_mail = acl_check_mail

never_users = root

host_lookup = *
ignore_bounce_errors_after = 2d
timeout_frozen_after = 7d

local_from_suffix = .*

add_environment = <; PATH=/bin:/usr/bin
keep_environment =

# Listen on additional ports
daemon_smtp_ports = 25 : 465 : 587

# this is the default, per the docs we don't need to put this here, but anyway make it explicit
spamd_address = 127.0.0.1 783

# TLS
tls_certificate = /etc/acmecerts/<%= @cert_name %>/live/ec-prime256v1.chained.crt
tls_privatekey = /etc/acmecerts/<%= @cert_name %>/live/ec-prime256v1.key
tls_advertise_hosts = *
tls_require_ciphers = NORMAL:%SERVER_PRECEDENCE

tls_on_connect_ports = 465

disable_ipv6 = true

###############################
# Access Control Lists (ACLs) #
###############################

begin acl

acl_check_rcpt:
  accept  hosts = :

  deny    message        = Restricted characters in address
          domains        = +local_domains
          local_parts    = ^[.] : ^.*[@%!/|]

  deny    message        = Restricted characters in address
          domains        = !+local_domains
          local_parts    = ^[./|] : ^.*[@%!] : ^.*/\\.\\./

  accept  local_parts    = postmaster : abuse
          domains        = +local_domains
          # accept mail for postmaster and abuse without filtering for compliance with RFC
          set acl_m2     = skip_spamd

  deny    hosts          = +toolforge_hosts
          sender_domains = !+local_domains
          message        = Mail sent from Toolforge using non-Toolforge domain $sender_address_domain

  accept  hosts          = +toolforge_hosts
          control        = submission

  # Some Cloud VPS projects (mostly those that move out of Toolforge) relay via the Toolforge mail
  # relay and not via the Cloud VPS mail relay. This is not supported, and we should consider
  # making this a hard reject.
  accept  log_message    = Cloud VPS user relaying mail via Toolforge for domain $sender_address_domain
          hosts          = +wmcs_hosts
          sender_domains = +local_domains
          control        = submission

  accept  authenticated  = *
          control        = submission

  require message        = Relay not permitted
          domains        = +local_domains

  require verify         = sender

  require verify         = recipient

  drop    message        = Blocked by DNSBL (see $dnslist_text)
          dnslists       = zen.spamhaus.org
          delay          = 15s

  accept


acl_check_data:
  warn add_header   = :at_start:${authresults {$primary_hostname}}

  # Only run through SpamAssassin if requested for this domain and
  # the message is not too large
  accept condition  = ${if >{$message_size}{400K}}

  # Skip if so requested (typically postmaster@ and abuse@)
  accept condition  = ${if eq{$acl_m2}{skip_spamd}}

  # Add spam headers if score >= 1
  warn spam         = nonexistent:true
       condition    = ${if >{$spam_score_int}{10}{1}{0}}
       set acl_m0   = $spam_score ($spam_bar)
       set acl_m1   = $spam_report

  # Reject spam at high scores (> 12)
  # Note $spam_score_int is the spam score multiplied by ten (120)
  deny message      = This message scored $spam_score spam points.
       spam         = nonexistent/defer_ok
       condition    = ${if >{$spam_score_int}{120}{1}{0}}

  accept

acl_check_mail:
  deny senders = /etc/exim4/deny_senders.list

  # Hourly host rate limit. Default limit and overrides are
  # configured in /etc/exim4/ratelimits/host_hourly_limits/
  #
  # change from defer to warn to stop enforcing the rate limit
  defer  message = Our system has detected an unusual rate of messages originating from this IP address. \
                  To protect our users from abuse this ip address has been temporarily rate limited. \
                  Please try again later. https://wikitech.wikimedia.org/wiki/Wikitech:Cloud_Services_Terms_of_use
        set acl_c_host_address_ratelimit=${lookup{$sender_host_address}iplsearch{/etc/exim4/ratelimits/host_hourly_limits}}
        ratelimit = $acl_c_host_address_ratelimit / 1h / $sender_host_address
        log_message = Sender host $sender_host_address has exceeded rate limit of $sender_rate_limit messages per $sender_rate_period

  # Hourly sender address rate limit. Default limit and overrides are
  # configured in /etc/exim4/ratelimits/sender_hourly_limits
  #
  # change from defer to warn to stop enforcing the rate limit
  defer  message = Our system has detected an unusual rate of messages originating from this sender address. \
                  To protect our users from abuse this sender address has been temporarily rate limited. \
                  Please try again later. https://wikitech.wikimedia.org/wiki/Wikitech:Cloud_Services_Terms_of_use
        set acl_c_sender_address_ratelimit=${lookup{$sender_address}nwildlsearch{/etc/exim4/ratelimits/sender_hourly_limits}}
        ratelimit = $acl_c_sender_address_ratelimit / 1h / $sender_address
        log_message = Sender address $sender_address has exceeded rate limit of $sender_rate_limit messages per $sender_rate_period
        # Ignore bounces since Exim seems greatly confused about per-sender rate limits on messages without senders.
        !senders = :

  accept

###########
# Routers #
###########

begin routers

# This was mostly copy & pasted from:
# https://github.com/hn/exim-misc/blob/master/exim-srs-sender-rewriting-scheme.conf

srs0_return:
	caseful_local_part
	domains = PRIMARY_DOMAIN
	local_part_prefix = srs0=
	driver = redirect
	allow_fail
	data = ${if !match {$local_part}{\N^([^=]+)=([0-9]+)=([^=]+)=(.+)\N}{:fail: Malformed SRS0 bounce} \
	       {${if !eq {$1}{${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$2&$3&$4}}}}}{:fail: Invalid SRS0 bounce} \
	       {${if <{$2}{${eval:$tod_epoch/86400-SRS_OFFSET-SRS_DSN_TIMEOUT}}{:fail: Invalid (expired) SRS0 bounce} \
	       {${quote_local_part:$4}@$3} \
	}}}}}
	headers_add = X-SRS-Return: DSN routed via $smtp_active_hostname (SRS0)

srs1_return:
	caseful_local_part
	domains = PRIMARY_DOMAIN
	local_part_prefix = srs1=
	driver = redirect
	allow_fail
	data = ${if !match {$local_part}{\N^([^=]+)=([^=]+)==(.+)\N}{:fail: Malformed SRS1 bounce} \
	       {${if !eq {$1}{${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$2&$3}}}}}{:fail: Invalid SRS1 bounce} \
	       {${quote_local_part:SRS0=$3}@$2} \
	}}}
	headers_add = X-SRS-Return: DSN routed via $smtp_active_hostname (SRS1)

srs_outgoing:
  caseful_local_part
  domains = ! +local_domains
  senders = ! : ! *@+local_domains
  errors_to = ${if match {$sender_address_local_part}{\N^[sS][rR][sS]0=(.+)\N} \
	    {${quote_local_part:SRS1=${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$sender_address_domain&$1}}}}=$sender_address_domain==$1}@PRIMARY_DOMAIN} \
	    {${if match {$sender_address_local_part}{\N^[sS][rR][sS]1=[^=]+=([^=]+)==(.+)\N} \
	    {${quote_local_part:SRS1=${length_5:${hmac{sha1}{SRS_SECRET}{${lc:$1&$2}}}}=$1==$2}@PRIMARY_DOMAIN} \
	    {${quote_local_part:SRS0=${length_5:${hmac{sha1}{SRS_SECRET}{${lc:${eval:$tod_epoch/86400-SRS_OFFSET}&$sender_address_domain&$sender_address_local_part}}}}=${eval:$tod_epoch/86400-SRS_OFFSET}=$sender_address_domain=$sender_address_local_part}@PRIMARY_DOMAIN} \
	    }}}
  driver = redirect
  data = ${quote_local_part:$local_part}@$domain
  headers_add = "X-SRS-Rewrite: SMTP return-path rewritten from <$sender_address> by $smtp_active_hostname"
  redirect_router = dnslookup
  no_verify

dnslookup:
  driver = dnslookup
  domains = ! +local_domains
  transport = remote_smtp
  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
  no_more

# Send mail to root@ and other system aliases to the Labs project admins

system_aliases:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup{$local_part}lsearch{/etc/aliases}}

postmaster_mail:
  driver = redirect
  local_parts = root
  data = INSTANCEPROJECT.admin

# Alias tools.<toolname>@ to <toolname>.maintainers@

tool_fallback:
  driver = redirect
  local_part_prefix = INSTANCEPROJECT.
  not_local_part_prefix_optional
  caseful_local_part
  local_parts = passwd;INSTANCEPROJECT.$local_part
  check_ancestor
  modemask = 002
  data = $local_part.maintainers

# Forward mail to <user>@ to the mail address set in LDAP (wikitech preference)

user_forward:
  driver = redirect
  caseful_local_part
  check_local_user
  expn = false
  check_ancestor
  modemask = 002
  data = ${run{/usr/local/sbin/localuser INSTANCEPROJECT $local_part}{$value}fail}

# Forward mail to <toolname>.<anything>@ using a specific .forward.<anything> file
# if present in the tool's home directory

tool_forward_specific:
  driver = redirect
  local_part_suffix = .*
  local_part_suffix_optional = false
  caseful_local_part
  local_parts = passwd;INSTANCEPROJECT.$local_part
  require_files = INSTANCEPROJECT.$local_part:$home/.forward.$local_part_suffix_v
  router_home_directory = ${lookup passwd{INSTANCEPROJECT.$local_part}{${extract{5}{:}{$value}}}fail}
  file = ${run{/usr/local/sbin/match-tool-alias $home $local_part_suffix_v}{$value}fail}
  expn = false
  check_ancestor
  modemask = 002
  pipe_transport = gridqueue
  allow_filter = false
  allow_defer = false
  allow_fail
  forbid_include
  forbid_file
  forbid_smtp_code
  hide_child_in_errmsg

# Forward mail to <toolname>.<anything>@ using the plain .forward file if
# .forward.<anything> doesn't exist

tool_forward_general:
  driver = redirect
  local_part_suffix = .*
  local_part_suffix_optional = false
  caseful_local_part
  local_parts = passwd;INSTANCEPROJECT.$local_part
  require_files = INSTANCEPROJECT.$local_part:$home/.forward
  router_home_directory = ${lookup passwd{INSTANCEPROJECT.$local_part}{${extract{5}{:}{$value}}}fail}
  file = $home/.forward
  expn = false
  check_ancestor
  modemask = 002
  pipe_transport = gridqueue
  allow_filter = false
  allow_defer = false
  allow_fail
  forbid_include
  forbid_file
  forbid_smtp_code
  hide_child_in_errmsg

# Forward mail to <toolname>.<anything> to the tool's maintainers if no .forward file exists

tool_default:
  driver = redirect
  local_part_suffix = .*
  local_part_suffix_optional = false
  caseful_local_part
  local_parts = passwd;INSTANCEPROJECT.$local_part
  router_home_directory = ${lookup passwd{INSTANCEPROJECT.$local_part}{${extract{5}{:}{$value}}}fail}
  expn = false
  check_ancestor
  modemask = 002
  data = ${run{/usr/local/sbin/maintainers INSTANCEPROJECT.$local_part}{$value}fail}

##############
# Transports #
##############

begin transports

remote_smtp:
  driver = smtp
  dkim_domain = ${if eq {${sender_address_domain}}{<%= @primary_domain %>} {<%= @primary_domain %>}{}}
  dkim_selector = toolforge : toolforge-rsa
  dkim_private_key = ${if exists{/etc/exim4/dkim/${dkim_domain}-${dkim_selector}.key}{/etc/exim4/dkim/${dkim_domain}-${dkim_selector}.key}{0}}
  dkim_canon = relaxed
  arc_sign = <%= @external_hostname %> : toolforge-arc : /etc/exim4/dkim/<%= @external_hostname %>-toolforge-arc.key : timestamps,expire

###############
# Retry rules #
###############

begin retry
*   *   F,2h,15m; G,16h,1h,1.5; F,4d,6h

#################
# Rewrite rules #
#################

begin rewrite

*@*.INSTANCEPROJECT.eqiad.wmflabs  root@PRIMARY_DOMAIN  F
*@*.INSTANCEPROJECT.eqiad1.wikimedia.cloud  root@PRIMARY_DOMAIN  F
