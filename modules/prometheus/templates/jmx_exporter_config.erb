<%-
require 'yaml'

# All labels / targets list
static_configs = []

# Iterate over each cluster and list of hosts by site in that cluster.
@site_clusters.each do |cluster, hosts_by_site|
  # Build a hash of labels => jmx_exporter_instance parameters.
  # Each instance parameters contains the jmx exporter hostname, port and hash
  # of jmx exporter instance custom labels.  We will build prometheus static_config
  # entries for each grouping of labels.
  #
  # Labels are applied at several levels here:
  # - @labels from the declared prometheus::jmx_exporter_config (on the prometheus server).
  # - Add a 'cluster' label for this 'cluster' name.  This usually comes from role hiera config.
  # - Finally any jmx exporter instance specific labels declared on the
  #   prometheus::jmx_exporter_instance class.
  parameter_by_labels = @resources.select {|r| hosts_by_site[@site].include?(r['certname']) }.each do |resource|
    resource['parameters']['labels'].merge!({'cluster' => cluster})
  end.group_by {|x| x['parameters']['labels'] }

  # Append common label targets to the static_configs
  parameter_by_labels.each do |labels, parameter_list|
    targets = parameter_list.map {|param| "#{param['parameters']['hostname']}:#{param['parameters']['port']}" }
    static_configs.push({
      'targets' => targets.sort,
      'labels'  => labels.sort.to_h
  })
  end
end
-%>
# This file is managed by puppet
<%= static_configs.to_yaml %>
