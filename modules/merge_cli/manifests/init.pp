# SPDX-License-Identifier: Apache-2.0
# @summary provisions the puppet-merge cli tools used in production to This is a private class called
#   by profile::puppetserver::git
# @param ca_server the configured ca server
# @param paths override the set of paths for the sha1 file and git repos
# @param ensure ensurable parameter
# @param masters The list of masters in the cluster
# @param workers The list of workers in the cluster
class merge_cli (
    Stdlib::Host        $ca_server,
    Merge_cli::Paths    $paths,
    Wmflib::Ensure      $ensure  = 'present',
    Array[Stdlib::Host] $masters = [],
    Array[Stdlib::Host] $workers = [],
) {
    $_masters = $masters - $facts['networking']['fqdn']
    $_workers = $workers - $facts['networking']['fqdn']

    # TODO: refactor so everything is treated equally apart from the ca_server
    $puppet_merge_conf = @("CONF")
    # Generated by Puppet
    MASTERS="${_masters.join(' ')}"
    WORKERS="${_workers.join(' ')}"
    CA_SERVER="${ca_server}"
    | CONF
    $python_config = {
        'paths' => $paths,
    }
    file { '/etc/puppet-merge':
        ensure => directory,
    }
    file {
        default:
            ensure => stdlib::ensure($ensure, 'file'),
            mode   => '0555';
        '/etc/puppet-merge/shell_config.conf':
            content => $puppet_merge_conf;
        '/etc/puppet-merge/python_config.json':
            content => $python_config.to_json();
        '/usr/local/bin/puppet-merge':
            source => 'puppet:///modules/merge_cli/puppet-merge.sh';
        '/usr/local/bin/puppet-merge.py':
            source => 'puppet:///modules/merge_cli/puppet-merge.py';
    }
}
